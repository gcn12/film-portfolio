{"version":3,"sources":["homepage/HomePage.js","header/Header.js","content.js","films/Thumbnail.js","films/Films.js","WorkPages/Work.js","contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","className","src","width","height","frameBorder","allow","title","allowFullScreen","Header","to","content","url","header","video","thumbnail","album","Thumbnail","props","map","work","index","onClick","getURL","key","alt","Films","Work","state","images","this","getPhotos","urlArray","item","push","indexOf","length","urls","image","Component","Contact","App","id","input","setState","window","location","href","split","reverse","setID","console","log","fetch","then","response","json","data","photoset","photo","sizes","size","source","exact","path","component","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0cee5ffd.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./HomePage.scss\"\n\nconst HomePage = () => {\n    return(\n        <div className=\"reel\">\n            <iframe \n            className=\"embed-home\"\n            src=\"https://player.vimeo.com/video/353403743\" \n            width=\"640\" \n            height=\"272\" \n            frameBorder=\"0\" \n            allow=\"autoplay; fullscreen\" \n            title=\"video\" \n            allowFullScreen\n            />\n        </div>\n    )\n}\n\nexport default HomePage","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport \"./Header.scss\"\n\nconst Header = () => {\n    return(\n        <div className=\"header\">\n            <div className=\"logo-and-subtitle\">\n                <Link className=\"logo\" to=\"/\">GARETH NG</Link>\n                <div className=\"break\"></div>\n                <div className=\"subtitle\">Cinematographer</div>\n            </div>\n            <div className=\"links\">\n                <Link className=\"link\" to=\"/films\">WORK</Link>\n                <Link className=\"link\" to=\"/contact\">CONTACT</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Header","const content = [\n    {\n        url: \"newyear\",\n        header: \"A New Year (Music Video)\",\n        video: \"\",\n        thumbnail: \"https://live.staticflickr.com/65535/50208144398_e6159d9acb_k.jpg\",\n        album: \"72157715436444986\",\n    },\n    {\n        url: \"fallen\",\n        header: \"The Fallen (Feature)\",\n        video: \"https://player.vimeo.com/video/388770525\",\n        thumbnail: \"https://live.staticflickr.com/65535/50208714186_4d58f0f266_k.jpg\",\n        album: \"72157715437437658\",\n\n    },\n    {\n        url: \"occult\",\n        header: \"The Occult (Short)\",\n        video: \"\",\n        thumbnail: \"https://live.staticflickr.com/65535/50209006287_da33fdd21a_k.jpg\",\n        album: \"72157715435274906\",\n    },\n    {\n        url: \"lovestruth\",\n        header: \"Love's Truth Behind (Music Video)\",\n        video: \"https://player.vimeo.com/video/391693065\",\n        thumbnail: \"https://live.staticflickr.com/65535/50208723206_90bbcc26f8_k.jpg\",\n        album: \"72157715437288708\",\n    },\n    {\n        url: \"december\",\n        header: \"December (Short Film)\",\n        video: \"https://player.vimeo.com/video/390813222\",\n        thumbnail: \"https://live.staticflickr.com/65535/50208199958_f09cc5c7b2_k.jpg\",\n        album: \"72157715437186658\",\n    },\n    {\n        url: \"wiches\",\n        header: \"Snitches Get Wiches (Short Film)\",\n        video: \"\",\n        thumbnail: \"https://live.staticflickr.com/65535/50208725981_aa3ffb8051_k.jpg\",\n        album: \"72157715438246752\",\n    },\n]\n\nexport default content","import React from \"react\"\nimport content from \"../content\"\nimport {Link} from \"react-router-dom\"\nimport \"./Thumbnail.scss\"\n\nconst Thumbnail = (props) => {\n    return(\n        content.map((work, index) => {\n            return(\n                <Link onClick={()=>props.getURL(work.url)} key={index} to={`/${work.url}`}>\n                    <img className=\"thumbnail\" alt=\"display\" src={work.thumbnail}></img>\n                </Link>\n            )\n        })\n    )\n}\n\nexport default Thumbnail","import React from \"react\"\nimport \"./Films.scss\"\nimport Thumbnail from \"./Thumbnail\"\n\nconst Films = (props) => {\n    return(\n        <div className=\"films\">\n            <Thumbnail getURL={props.getURL}/>\n        </div>\n    )\n}\n\nexport default Films","import React, { Component } from \"react\"\nimport content from \"../content\"\nimport \"./Work.scss\"\n\nclass Work extends Component {\n\n    state={\n        images: [],\n    }\n\n    componentDidMount(){\n        this.props.getPhotos()\n    }\n\n    render(){\n        const urlArray = []\n        for (const item of content){\n            urlArray.push(item.url)\n        }\n        const index = urlArray.indexOf(this.props.url)\n        return(\n            <div>\n                <br></br>\n                <div className=\"work-title\">{content[index].header}</div>\n                {\n                    content[index].video.length>0\n                    ? \n                    <iframe \n                    className=\"embed-home\"\n                    src={content[index].video} \n                    width=\"640\" \n                    height=\"272\" \n                    frameBorder=\"0\" \n                    allow=\"autoplay; fullscreen\" \n                    title=\"video\" \n                    allowFullScreen\n                    />\n                    :\n                    <div></div>\n                }\n                <br></br>\n                <div className=\"stills\">\n                {\n                this.props.urls.map((image, index)=> {\n                    return(\n                        <img className=\"still\" key={index} alt=\"still\" src={image}></img>\n                        // <img className=\"still\" key={index} style={{height: \"100px\"}} alt=\"still\" src={image}></img>\n                    )\n                })\n                }   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Work","import React from \"react\"\nimport \"./Contact.css\"\n\nconst Contact = () => {\n    return(\n        <div className=\"contact\">\n            <div className=\"email\">\n                e: garethcng@gmail.com\n            </div>\n            <div className=\"instagram\">\n                instagram: instagram.com/garethng\n            </div>\n        </div>\n    )\n}\n\nexport default Contact","import React, { Component } from 'react';\nimport './App.css';\nimport {Route, Switch} from \"react-router-dom\"\nimport HomePage from \"./homepage/HomePage\"\nimport Header from \"./header/Header\"\nimport Films from \"./films/Films\"\nimport Work from \"./WorkPages/Work\"\nimport Contact from \"./contact/Contact\"\nimport content from \"./content\"\n\nclass App extends Component {\n\n  state={\n    url: \"\",\n    id: [],\n    urls: [],\n  }\n\n  getURL = (input) => {\n    this.setState({\n      url: input\n    })\n  }\n\n  getPhotos = () => {\n    this.setState({\n      url: window.location.href.split(\"/\").reverse()[0]\n    })\n    let setID = \"72157715435274906\"\n    const urlArray = []\n    for (const item of content){\n        urlArray.push(item.url)\n    }\n    const index = urlArray.indexOf(window.location.href.split(\"/\").reverse()[0])\n    if(index!==-1){\n      this.setState({\n        urls: []\n      })\n\n      console.log(index)\n      setID=content[index].album\n      fetch(`https://www.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=3e8a789d6f4ae2feba4c606393db4c70&photoset_id=${setID}&user_id=96067761%40N02&format=json&nojsoncallback=1`)\n      .then(response=>response.json())\n      .then(data=>{\n        const urlArray = []\n        data.photoset.photo.map(photo=>{\n          fetch(`https://www.flickr.com/services/rest/?method=flickr.photos.getSizes&api_key=3e8a789d6f4ae2feba4c606393db4c70&photo_id=${photo.id}&format=json&nojsoncallback=1`)\n          .then(response=>response.json())\n          .then(data=>{\n            urlArray.push(data.sizes.size[9].source)\n            this.setState({\n            })\n          })\n          return(photo.id)\n        })\n        this.setState({\n          urls: urlArray\n        })\n      })\n    }\n  }\n  \n  componentDidMount() {\n    this.getPhotos()\n  }\n  \n\n  render() {\n    return (\n      <div>\n        <Header />\n        <br></br>\n        <br></br>\n        {/* <br></br> */}\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route exact path=\"/films\" render={(props)=> <Films {...props} getURL={this.getURL}/>}></Route>\n          <Route exact path=\"/contact\" component={Contact}></Route>\n          <Route exact path={`/${this.state.url}`} render={(props)=><Work getPhotos={this.getPhotos}  urls={this.state.urls} {...props} url={this.state.url} title=\"Hello\"/>}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}